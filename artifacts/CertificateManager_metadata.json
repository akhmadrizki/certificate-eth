{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "certificateId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "issueDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expiredDate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "numberOfParticipants",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "issuer",
						"type": "address"
					}
				],
				"name": "CertificateIssued",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "certificateId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "enum CertificateManager.CertificateStatus",
						"name": "newStatus",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "updater",
						"type": "address"
					}
				],
				"name": "CertificateStatusUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_nonce",
						"type": "string"
					}
				],
				"name": "generateCertificateId",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_certificateId",
						"type": "bytes32"
					}
				],
				"name": "getCertificate",
				"outputs": [
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "issueDate",
						"type": "uint256"
					},
					{
						"internalType": "enum CertificateManager.CertificateStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "expiredDate",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "nim",
								"type": "uint256"
							}
						],
						"internalType": "struct CertificateManager.Participant[]",
						"name": "participants",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_certificateId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "nim",
								"type": "uint256"
							}
						],
						"internalType": "struct CertificateManager.Participant[]",
						"name": "_participants",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "_expiredDate",
						"type": "uint256"
					}
				],
				"name": "issueCertificate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_certificateId",
						"type": "bytes32"
					},
					{
						"internalType": "enum CertificateManager.CertificateStatus",
						"name": "_newStatus",
						"type": "uint8"
					}
				],
				"name": "updateCertificateStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_nimOrRandomNumber",
						"type": "uint256"
					}
				],
				"name": "verifyCertificateByNIM",
				"outputs": [
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "issueDate",
						"type": "uint256"
					},
					{
						"internalType": "enum CertificateManager.CertificateStatus",
						"name": "status",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "expiredDate",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "participantName",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isValid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"generateCertificateId(string,string)": {
					"details": "Membuat ID unik dari judul dan string acak (nonce)"
				},
				"getCertificate(bytes32)": {
					"details": "Mendapatkan data sertifikat lengkap berdasarkan ID. (Fungsi READ ONLY)"
				},
				"issueCertificate(bytes32,string,(string,uint256)[],uint256)": {
					"details": "Menerbitkan dan menyimpan sertifikat baru dengan array peserta. MENGGUNAKAN LOOP MANUAL untuk menghindari UnimplementedFeatureError."
				},
				"updateCertificateStatus(bytes32,uint8)": {
					"details": "Mengubah status sertifikat (hanya owner yang bisa)."
				},
				"verifyCertificateByNIM(uint256)": {
					"details": "Memverifikasi keberadaan sertifikat berdasarkan NIM/Angka Unik. (Fungsi READ ONLY)"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Certificate.sol": "CertificateManager"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Certificate.sol": {
			"keccak256": "0xb8c8f3b3c2ff50db99c2c7b8bc19d050c14ce65e7f4930bcdd1cb59ca9fe2c6f",
			"license": "MIT",
			"urls": [
				"bzz-raw://8d50b214f8cdbc3b751947c086fd230ef694ef70406956c6bd1e29f4bd87098f",
				"dweb:/ipfs/QmYkGrtRYgxCZDHJ1zAWMnttHmEPtua4aD6sWpy2ezwJHx"
			]
		}
	},
	"version": 1
}